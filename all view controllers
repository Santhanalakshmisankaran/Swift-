//viewControllers.swift
//
//  ViewController.swift
//  viewcontrollers
//
//  Created by memobile-inc667 on 21/11/19.
//  Copyright Â© 2019 memobile-inc667. All rights reserved.
//

import UIKit
extension Date
{
    //open func string(from date: Date) -> String
    func toString(style:DateFormatter.Style) -> String
    {
       let dateformatter = DateFormatter()
        dateformatter.dateStyle=style
        return dateformatter.string(from: self)
    }
}
class ViewController: UIViewController,UITextFieldDelegate,UITextViewDelegate {
//
    override func viewDidLoad() {
        super.viewDidLoad()
//        slider.minimumValue = 100
//        slider.maximumValue = 200
//        slider.frame = CGRect(x: 0, y: 100, width: view.frame.width, height: 50)
//        view.addSubview(slider)
//        textview = UITextView(frame:CGRect(x: 150, y: 200, width: 100, height: 50))
//        textview.delegate = self
//        textview.backgroundColor = .gray
//        textview.textColor = .white
//        textview.font = UIFont.init(name: "Courier", size: 30)
//            slider.addTarget(self, action: #selector(sliderRate(rate:)), for: .valueChanged)
//        view.addSubview(textview)*/
//
        
        //segment view controller
        
//        segment_controller = UISegmentedControl(items: item)
//        segment_controller.frame = CGRect(x: 0, y: 100, width: view.frame.width, height: 50)
//        segment_controller.backgroundColor = .yellow
//        segment_controller.tintColor = .blue
//        segment_controller.addTarget(self, action: #selector(indexvalue(sender:)), for: .valueChanged)
//        view.addSubview(segment_controller)
//        text_field.frame = CGRect(x: 0, y: 200, width: view.frame.width, height: 100)
//        text_field.delegate = self
//        text_field.backgroundColor = .darkGray
//        text_field.textColor = .white
//        view.addSubview(text_field)
//        text_field.addTarget(self, action: #selector(textDidchange(textField: )), for: .editingChanged)
        // Do any additional setup after loading the view.
        //label
//        let label =  UILabel()
//        label.frame = CGRect(x: 0, y: view.frame.height, width: view.frame.width, height: view.frame.height)
//        label.autoresizingMask = [.flexibleWidth,.flexibleHeight,.flexibleTopMargin]
//        label.backgroundColor = UIColor.red
//        label.textColor = UIColor.white
//        label.text = "Sample Text"
//        label.font = UIFont.systemFont(ofSize: 17)
//        view.addSubview(label)
        
        
       // activity indicator
        let activityView = UIActivityIndicatorView(style: .medium)
        activityView.center = self.view.center
        activityView.startAnimating()
        activityView.color = UIColor(ciColor: .red)
        activityView.hidesWhenStopped = true
        self.view.addSubview(activityView)
        
        //Image view
        
//        let imagename="food"
//        let image=UIImage(named: imagename)
//        let imageview=UIImageView(image: image!)
//        imageview.frame=CGRect(x: 10, y: 20, width: 100, height: 100)
//        view.addSubview(imageview)
//
//        //datepicker
//
        let datepicker=UIDatePicker()
        datepicker.addTarget(self, action: #selector(datevaluechange(datepicker:)), for: .valueChanged)
        datepicker.datePickerMode = .date
            //let cal = Calendar(identifier: .gregorian)
            var components = DateComponents()
           components.month = -1
            components.day = 0
            components.year = -1
            let mindate = Calendar.current.date(byAdding: components, to: Date())
           components.month = 0
            components.day = 0
        components.year = 0
            let maxdate = Calendar.current.date(byAdding: components, to: Date())
           datepicker.minimumDate = mindate
            datepicker.maximumDate = maxdate

          // datepicker.minimumDate = cal.date(byAdding: .day, value: -1, to: Date())
         datepicker.date = datepicker.minimumDate ?? Date()
            datepicker.minimumDate = Date()
        datepicker.frame = CGRect(x: 100, y: 100, width: 300, height: 216)
           view.addSubview(datepicker)
//        //let str = mydate.toString(style: .medium)
//        //lab.font = UIFont(name: str, size: 30)
//
//            /*let btn = UIButton()
//            btn.addTarget(self, action: #selector(emoji(sender:)), for: .touchUpInside)*/
//                   lab.frame = CGRect(x: 100, y: 200, width: 400, height: 300)
//        view.addSubview(lab)
//
//    }
//
    }
    @objc func datevaluechange(datepicker:UIDatePicker)
    {
        let mydate = datepicker.date
        let str = mydate.toString(style: .medium)
        lab.text = str
               // lab.text = datepicker.date
      print(datepicker.date)
    }
//
//    //super.viewDidLoad()
//    // Do any additional setup after loading the view, typically from a nib.
//
//    }
//    @objc func indexvalue(sender: UISegmentedControl)
//    {
//        for index in 0..<item.count
//        {
//            if index == sender.selectedSegmentIndex
//            {
//                text_field.text = item[sender.selectedSegmentIndex]
//            }
//        }
//    }
//
//    func textFieldDidBeginEditing(_ textField: UITextField) {
//        print("textFieldDidBeginEditing")
//    }
//    func textFieldShouldBeginEditing(_ textField: UITextField) -> Bool {
//        print(" textFieldShouldBeginEditing")
//        return true
//    }
//    @objc func textDidchange(textField: UITextField){
//        for (index,value) in item.enumerated()
//        {
//            if textField.text?.lowercased() == value
//            {
//                segment_controller.selectedSegmentIndex = index
//            }
//        }
//    print("Text changed")
//
//
//    }*/
//    }
//   /* @objc func sliderRate(rate:UISlider)
//    {
//        let value = Int(rate.value)
//        textview.text = String(value)
//    }
//    @objc func changetext(value:UITextView)
//    {
//
//    }
//    internal func textViewShouldBeginEditing(_ textView: UITextView) -> Bool
//    {
//        print("textViewShouldBeginEditing")
//        return true
//    }
//
//    private func textViewShouldEndEditing(textView: UITextView)
//    {
//       print("textViewShouldEndEditing")
//    }
//    private func textViewDidBeginEditing(textView: UITextView)
//    {
//        print("textViewDidBeginEditing")
//    }
//
//    private func textViewDidEndEditing(textView: UITextView)
//    {
//        print("textViewDidEndEditing")
//    }
//    private func textViewDidChange(textView: UITextView)    {
//        print("textViewDidChange")
//    }
//
//    func textViewDidChangeSelection(_ textView: UITextView)
//    {
//        print("textViewDidChangeSelection")
//        slider.value = Float(textView.text) ?? 0.5
//    }*/
}
}
